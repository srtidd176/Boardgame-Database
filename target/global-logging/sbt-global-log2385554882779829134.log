[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\river\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\river\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (Eclipse OpenJ9 Java 1.8.0_265)
[debug]       Load.loadUnit: plugins took 73.9283ms
[debug]       Load.loadUnit: defsScala took 0.2059ms
[debug] [Loading] Scanning directory C:\Users\river\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.5883 ms
[debug]           Load.resolveProject(global-plugins) took 33.3356ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\river\.sbt\1.0\plugins, plugins: List(<none>))) took 59.8091ms
[debug] [Loading] Done in C:\Users\river\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 75.1083ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1972ms
[debug]     Load.loadUnit(file:/C:/Users/river/.sbt/1.0/plugins/, ...) took 154.3418ms
[debug]   Load.apply: load took 318.468ms
[debug]   Load.apply: resolveProjects took 4.4628ms
[debug]   Load.apply: finalTransforms took 85.765ms
[debug]   Load.apply: config.delegates took 5.1432ms
[debug]   Load.apply: Def.make(settings)... took 999.1449ms
[debug]   Load.apply: structureIndex took 111.8241ms
[debug]   Load.apply: mkStreams took 1.0834ms
[info] loading global plugins from C:\Users\river\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3528.9275ms
[debug]           Load.loadUnit: plugins took 27.3047ms
[debug]           Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\river\IdeaProjects\Tidd_Project0\project
[debug]             Load.loadUnit: mkEval took 3.7344ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project0\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.0208 ms
[info] loading settings for project tidd_project0-build from idea2.sbt ...
[debug]               Load.resolveProject(tidd_project0-build) took 2.3353ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tidd_project0-build, base: C:\Users\river\IdeaProjects\Tidd_Project0\project, plugins: List(<none>))) took 5.9289ms
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project0\project, returning: (tidd_project0-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 126.6826ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.5593ms
[debug]         Load.loadUnit(file:/C:/Users/river/IdeaProjects/Tidd_Project0/project/, ...) took 158.5273ms
[debug]       Load.apply: load took 159.9203ms
[debug]       Load.apply: resolveProjects took 0.0665ms
[debug]       Load.apply: finalTransforms took 18.1653ms
[debug]       Load.apply: config.delegates took 0.3723ms
[debug]       Load.apply: Def.make(settings)... took 63.0259ms
[debug]       Load.apply: structureIndex took 31.8577ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\Users\river\IdeaProjects\Tidd_Project0\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 671.5404ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\river\IdeaProjects\Tidd_Project0
[debug]       Load.loadUnit: mkEval took 0.2386ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project0, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.3313 ms
[info] loading settings for project tidd_project0 from build.sbt ...
[debug]         Load.resolveProject(tidd_project0) took 19.4452ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tidd_project0, base: C:\Users\river\IdeaProjects\Tidd_Project0, plugins: List(<none>))) took 23.5632ms
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project0, returning: (tidd_project0)
[debug]     Load.loadUnit: loadedProjectsRaw took 89.5157ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.6942ms
[debug]   Load.loadUnit(file:/C:/Users/river/IdeaProjects/Tidd_Project0/, ...) took 765.2667ms
[debug] Load.apply: load took 766.918ms
[debug] Load.apply: resolveProjects took 0.0725ms
[debug] Load.apply: finalTransforms took 24.7933ms
[debug] Load.apply: config.delegates took 0.2905ms
[debug] Load.apply: Def.make(settings)... took 66.4693ms
[debug] Load.apply: structureIndex took 18.618ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to Tidd_Project0 (in build file:/C:/Users/river/IdeaProjects/Tidd_Project0/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49835 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49835, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Tidd_Project0 (in build file:/C:/Users/river/IdeaProjects/Tidd_Project0/)
[debug] > Exec(idea-shell, None, None)
