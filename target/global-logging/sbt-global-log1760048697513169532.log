[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\river\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\river\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (Eclipse OpenJ9 Java 1.8.0_265)
[debug]       Load.loadUnit: plugins took 77.1669ms
[debug]       Load.loadUnit: defsScala took 0.2575ms
[debug] [Loading] Scanning directory C:\Users\river\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.2781 ms
[debug]           Load.resolveProject(global-plugins) took 31.8904ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\river\.sbt\1.0\plugins, plugins: List(<none>))) took 63.103ms
[debug] [Loading] Done in C:\Users\river\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 85.1143ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.202ms
[debug]     Load.loadUnit(file:/C:/Users/river/.sbt/1.0/plugins/, ...) took 169.6081ms
[debug]   Load.apply: load took 323.8566ms
[debug]   Load.apply: resolveProjects took 4.2345ms
[debug]   Load.apply: finalTransforms took 88.6388ms
[debug]   Load.apply: config.delegates took 5.8634ms
[debug]   Load.apply: Def.make(settings)... took 931.6126ms
[debug]   Load.apply: structureIndex took 116.7139ms
[debug]   Load.apply: mkStreams took 1.2922ms
[info] loading global plugins from C:\Users\river\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4641.3174ms
[debug]           Load.loadUnit: plugins took 24.9517ms
[debug]           Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\river\IdeaProjects\Tidd_Project0\project
[debug]             Load.loadUnit: mkEval took 3.8116ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project0\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7146 ms
[info] loading settings for project tidd_project0-build from idea.sbt ...
[debug]               Load.resolveProject(tidd_project0-build) took 2.3512ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tidd_project0-build, base: C:\Users\river\IdeaProjects\Tidd_Project0\project, plugins: List(<none>))) took 4.4708ms
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project0\project, returning: (tidd_project0-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2020.2619ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.4226ms
[debug]         Load.loadUnit(file:/C:/Users/river/IdeaProjects/Tidd_Project0/project/, ...) took 2049.3414ms
[debug]       Load.apply: load took 2050.6289ms
[debug]       Load.apply: resolveProjects took 0.0654ms
[debug]       Load.apply: finalTransforms took 12.2132ms
[debug]       Load.apply: config.delegates took 0.2742ms
[debug]       Load.apply: Def.make(settings)... took 61.8749ms
[debug]       Load.apply: structureIndex took 23.2073ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\river\IdeaProjects\Tidd_Project0\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4658.9796ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\river\IdeaProjects\Tidd_Project0
[debug]       Load.loadUnit: mkEval took 0.1989ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project0, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.4538 ms
[info] loading settings for project tidd_project0 from build.sbt ...
[debug]         Load.resolveProject(tidd_project0) took 25.431ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tidd_project0, base: C:\Users\river\IdeaProjects\Tidd_Project0, plugins: List(<none>))) took 28.727ms
[debug] [Loading] Done in C:\Users\river\IdeaProjects\Tidd_Project0, returning: (tidd_project0)
[debug]     Load.loadUnit: loadedProjectsRaw took 903.8981ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.3505ms
[debug]   Load.loadUnit(file:/C:/Users/river/IdeaProjects/Tidd_Project0/, ...) took 5570.6107ms
[debug] Load.apply: load took 5572.2024ms
[debug] Load.apply: resolveProjects took 0.0784ms
[debug] Load.apply: finalTransforms took 20.7419ms
[debug] Load.apply: config.delegates took 0.3195ms
[debug] Load.apply: Def.make(settings)... took 72.5096ms
[debug] Load.apply: structureIndex took 65.4249ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to Tidd_Project0 (in build file:/C:/Users/river/IdeaProjects/Tidd_Project0/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62962 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62962, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Tidd_Project0 (in build file:/C:/Users/river/IdeaProjects/Tidd_Project0/)
[debug] > Exec(idea-shell, None, None)
